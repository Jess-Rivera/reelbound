Next Session Plan
=================
1. Hook Clock + Reels
   - Instantiate `Clock` and `ReelManager` in `main.ts`.
   - Subscribe to ticks (`clock.onTick`) and update reels every frame.
   - Add a dev button or key to trigger `spinAll()` and log `getVisibleGrid()` when `isAllStopped()` is true.

2. Player Stop Control
   - Track the “next reel to stop” index.
   - Wire a button press to call `reel.forceStop()` (or `spin()` with zero velocity) on that reel only.
   - After stopping, advance the index; once all reels are stopped, transition to scoring prep.

3. Row Spin Prototype
   - Decide how to model horizontal spins (reuse `ReelCore` with row strips or create a variant).
   - Build the strip from the visible grid once vertical reels finish.
   - Run a timing test to confirm the mechanic feels responsive before polishing.

4. UI/Feedback
   - Render the current grid in a basic DOM element for visual inspection.
   - Surface the stop button in the UI and show which reel is armed to stop next.

5. Stretch Goals (if time)
   - Log RNG seeds/results to ensure deterministic replays.
   - Draft a lightweight game-state controller to manage transitions (spinning → rows → scoring).
